
#user  nobody;
#user  www-data;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  debug;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    gzip  on;


    server {
        listen  80;
        server_name  www.10away.net;
        return  302 http://10away.net$request_uri;
    }

    server {
        listen 80;
        server_name  10away.net;
        client_max_body_size 4096M;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        #location / {
        #    root   html;
        #    index  index.html index.htm;
        #}

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}

        # web
        location / {
            try_files $uri @thunderfs;
        }

        location @thunderfs {
            add_header Access-Control-Allow-Origin http://10away.net;

            include uwsgi_params;
            uwsgi_pass unix:/tmp/uwsgi.sock;
        }

        location /assets/ {

        }
    }

    server {
        listen 80;
        server_name  file1.10away.net;
        client_max_body_size 4096M;
       
        # mongo-gridfs
        location /get/ {
            gridfs thunderfs field=filename type=string;
            mongo "thunderfs" 127.0.0.1:27017;
        }

        # web
        location / {
            try_files $uri @thunderfs;
        }

        location @thunderfs {
            # from http://enable-cors.org/server_nginx.html
            
            set $http_origin "http://10away.net";
            
            if ($http_origin ~* (https?://([^/]*\.)?10away\.net(:[0-9]+)?)) {
                set $cors "true";
            }
            
            # OPTIONS indicates a CORS pre-flight request
            if ($request_method = 'OPTIONS') {
              set $cors "${cors}options";  
            }

            # non-OPTIONS indicates a normal CORS request
            if ($request_method = 'GET') {
              set $cors "${cors}get";  
            }
            if ($request_method = 'POST') {
              set $cors "${cors}post";
            }
            
            # if it's a GET or POST, set the standard CORS responses header
            if ($cors = "trueget") {
              add_header 'Access-Control-Allow-Origin' "$http_origin";
              add_header 'Access-Control-Allow-Credentials' 'true';
            }
            
            if ($cors = "truepost") {
              add_header 'Access-Control-Allow-Origin' "$http_origin";
              add_header 'Access-Control-Allow-Credentials' 'true';
            }
                        
            if ($cors = "trueoptions") {
              add_header 'Access-Control-Allow-Origin' "$http_origin";
              add_header 'Access-Control-Allow-Credentials' 'true';

              add_header 'Access-Control-Max-Age' 1728000;
              add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT';
              add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since';

              add_header 'Content-Length' 0;
              add_header 'Content-Type' 'text/plain charset=UTF-8';
              return 204;
            }            
            
            include uwsgi_params;
            uwsgi_pass unix:/tmp/uwsgi.sock;
        }
    }

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
