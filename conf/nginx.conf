upstream thunderfs {
    #server unix:/tmp/uwsgi.sock; # for a web port socket (we'll use this first)
    server 127.0.0.1:8114;
}

server {
    listen  80;
    server_name  www.10away.net;
    return  302 http://10away.net$request_uri;
}

server {
    listen 80;
    server_name  10away.net;
    client_max_body_size 4096M;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   html;
    }

    # web
    location / {
        try_files $uri @thunderfs;
    }

    location @thunderfs {
        add_header Access-Control-Allow-Origin http://10away.net;

        include uwsgi_params;
        uwsgi_pass thunderfs;
    }

    location /assets/ {

    }
}

server {
    listen 80;
    server_name  file1.10away.net;
    client_max_body_size 4096M;

    # mongo-gridfs
    #location /get/ {
    #    gridfs thunderfs field=filename type=string;
    #    mongo "thunderfs" 127.0.0.1:27017;
    #}

    # web
    location / {
        try_files $uri @thunderfs;
    }

    location @thunderfs {
        # from http://enable-cors.org/server_nginx.html

        set $http_origin "http://10away.net";

        set $option 0;

        # OPTIONS indicates a CORS pre-flight request
        if ($request_method = 'OPTIONS') {
          set $option 1;
        }

        # if it's a GET or POST, set the standard CORS responses header
        if ($option = 0) {
          add_header 'Access-Control-Allow-Origin' "$http_origin";
          add_header 'Access-Control-Allow-Credentials' 'true';
        }

        if ($option = 1) {
          add_header 'Access-Control-Allow-Origin' "$http_origin";
          add_header 'Access-Control-Allow-Credentials' 'true';

          add_header 'Access-Control-Max-Age' 1728000;
          add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT';
          add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since';

          add_header 'Content-Length' 0;
          add_header 'Content-Type' 'text/plain charset=UTF-8';
          return 204;
        }

        include uwsgi_params;
        uwsgi_pass unix:/tmp/uwsgi.sock;
    }
}